package ru.kuchibecka.asuTpSecReactive.controller;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;
import ru.kuchibecka.asuTpSecReactive.entity.Exploit;
import ru.kuchibecka.asuTpSecReactive.service.ExploitService;

@RestController
@RequestMapping("api/exploit")
@CrossOrigin(origins = "http://localhost:3000")
public class ExploitController {
    @Autowired
    private ExploitService exploitService;

    @GetMapping(path = "")
    Flux<Exploit> getExploits() {
        return exploitService.findAll();
    }

    @GetMapping("/{id}")
    Mono<Exploit> getById(@PathVariable Long id) {
        return exploitService.findById(id);
    }

    @GetMapping("/by-name")
    Flux<Exploit> byName(@RequestParam("name") String name) {
        return exploitService.getExploitByName(name);
    }

    @PostMapping("")
    Mono<Exploit> createExploit(@RequestBody Exploit exploit) {
        return exploitService.save(exploit);
    }

    @PutMapping("/{id}/edit/")
    Mono<Exploit> updateExploit(@PathVariable Long id, @RequestBody Exploit exploit) {
        return exploitService.findById(id)
                .flatMap(dbExploit -> {
                    BeanUtils.copyProperties(exploit, dbExploit);
                    return exploitService.save(dbExploit);
                });
    }

    @DeleteMapping("/{id}/delete/")
    Mono<Void> deleteExploit(@PathVariable Long id) {
        return exploitService.findById(id)
                .flatMap(Exploit ->
                        exploitService.delete(Exploit)
                );
    }
}
